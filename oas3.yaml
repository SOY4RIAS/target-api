openapi: 3.0.0
paths:
  /api/v1:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        "200":
          description: ""
  /api/v1/auth/signup:
    post:
      operationId: AuthController_signup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
  /api/v1/auth/signin:
    post:
      operationId: AuthController_signin
      parameters: []
      responses:
        "201":
          description: ""
  /api/v1/auth/check-token:
    get:
      operationId: AuthController_checkToken
      parameters: []
      responses:
        "200":
          description: ""
  /api/v1/auth/signout:
    post:
      operationId: AuthController_signout
      parameters: []
      responses:
        "201":
          description: ""
  /api/v1/topics:
    post:
      operationId: TopicsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTopicDto"
      responses:
        "201":
          description: ""
    get:
      operationId: TopicsController_findAll
      parameters: []
      responses:
        "200":
          description: ""
  "/api/v1/topics/{id}":
    get:
      operationId: TopicsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
    patch:
      operationId: TopicsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTopicDto"
      responses:
        "200":
          description: ""
    delete:
      operationId: TopicsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
info:
  title: Target-API
  description: Target-API v2 training project
  version: "1.0"
  contact: {}
tags:
  - name: Target
    description: ""
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties:
        name:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        confirmPassword:
          type: string
      required:
        - name
        - lastName
        - gender
        - email
        - password
        - confirmPassword
    UserDto:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        email:
          type: string
          format: email
      required:
        - id
        - name
        - lastName
        - gender
        - email
    CreateTopicDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the topic
          example: NestJS
        image:
          type: string
          description: The image of the topic
          example: https://nestjs.com/img/logo_text.svg
      required:
        - name
        - image
    UpdateTopicDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the topic
          example: NestJS
        image:
          type: string
          description: The image of the topic
          example: https://nestjs.com/img/logo_text.svg
